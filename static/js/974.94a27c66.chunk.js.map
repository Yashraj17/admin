{"version":3,"file":"static/js/974.94a27c66.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","views/pages/Setting.js","services/service.js","services/file.js","utils/UploadImage.js","views/components/Pagination.js","views/pages/Service.js","services/worker.js","services/workhistory.js","views/pages/WorkHistory.js","views/pages/management/workerManagement.js","services/user.js","services/job.js","views/pages/JobList.js","views/pages/management/userManagement.js","services/leave.js","views/pages/Leave.js","views/layout/route.js","views/layout/Menu.js","views/layout/Breadcrumb.js","views/pages/errors/Error404.js","views/layout/Top.js","views/layout/Layout.js"],"sourcesContent":["const App = () => {\r\n    return (\r\n        <>\r\n            <h2 style={{textAlign: 'center'}}>Dashboard Coming Soon...</h2>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","const Seeting = () => {\r\n    return (\r\n        <>\r\n            <h2 style={{textAlign: 'center'}}>Seeting Coming Soon...</h2>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Seeting;","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'service';\r\n\r\n    static detailService(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static listService(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveService(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteService(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\"+  url);\r\n    }\r\n\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload } from \"antd\";\r\nimport ImgCrop from 'antd-img-crop';\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadImage({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    if (cropImage) {\r\n        if (typeof cropImage !== typeof {}) {\r\n            cropImage = {};\r\n        }\r\n        cropImage.aspect = cropImage.aspect || 1;\r\n        cropImage.shape = cropImage.shape || 'rect';\r\n        cropImage.quality = cropImage.quality || 1;\r\n        return (\r\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\r\n                <Upload\r\n                    accept=\"image/*\"\r\n                    customRequest={uploadImage}\r\n                    onChange={handleOnChange}\r\n                    onRemove={handleRemove}\r\n                    listType={listType}\r\n                    fileList={fileList}\r\n                    className=\"image-upload-grid\"\r\n                    disabled={disabled}\r\n                >\r\n                    {fileList?.length >= count ? null : <div>Upload</div>}\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    } else {\r\n        return <Upload\r\n            accept=\"image/*\"\r\n            customRequest={uploadImage}\r\n            onChange={handleOnChange}\r\n            onRemove={handleRemove}\r\n            listType={listType}\r\n            fileList={fileList}\r\n            className=\"image-upload-grid\"\r\n            disabled={disabled}\r\n        >\r\n            {fileList?.length >= count ? null : <div>Upload</div>}\r\n        </Upload>\r\n    }\r\n\r\n};","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/service';\r\n\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport commonObj from '../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Service() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 300,\r\n        },\r\n        {\r\n            title: 'Per Hour Rate',\r\n            dataIndex: 'per_hr_rate',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Icon',\r\n            dataIndex: 'file',\r\n            render: (v) => {\r\n                return <Image src={v?.url} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            Services.listService(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteService(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (viewAccess) {\r\n    //         userService.list({ isAll: 1 }).then(res => { setUsers(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    //     }\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Services</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        Services.detailService(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.file ? [res.data?.file] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n            setAjxRequesting(true);\r\n            Services.saveService(data).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Services'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                        <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"name\" value={data.name} onChange={e => { handleChange({ name: e.target.value })}} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Per Hour Rate\" required>\r\n                                    <Input placeholder=\"Per Hour Rate\" type='number' value={data.per_hr_rate} onChange={e => { handleChange({ per_hr_rate: e.target.value })}} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Icon\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} listType=\"picture\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'worker';\r\n\r\n    static detailWorker(id, data) {\r\n        return axios.get(this.baseURL + '/details-worker/' + id, { params: data });\r\n    }\r\n    static listWorker(data) {\r\n        return axios.get(this.baseURL + '/list-worker', { params: data });\r\n    }\r\n    static saveWorker(data, query) {\r\n        return axios.post(this.baseURL + \"/save-worker\", data, { params: query });\r\n    }\r\n    static deleteWorker(id) {\r\n        return axios.post(this.baseURL + '/delete-worker', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'workhistory';\r\n\r\n    static listWorkHistory(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, DatePicker, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport WorkHistoryService from '../../services/workhistory';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport commonObj from '../../commonObj';\r\n\r\nconst viewAccess = true;\r\n\r\nexport default function WorkHistory({workerId = null}) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20,workerId });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n    \r\n        {\r\n            title: 'Costumer Name',\r\n            dataIndex: 'userServiceDetail',\r\n            width: 200,\r\n            render: (v) => v?.receiverName\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'userServiceDetail',\r\n            width: 200,\r\n            render: (v) => v?.phone\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'userServiceDetail',\r\n            width: 200,\r\n            render: (v) => v?.amount\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'userServiceDetail',\r\n            width: 200,\r\n            render: (v) => v?.status\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            WorkHistoryService.listWorkHistory(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Worker History</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {/* <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    } */}\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, DatePicker, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport WorkerService from '../../../services/worker';\r\nimport Service from '../../../services/service';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport WorkHistory from '../WorkHistory';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function WorkerManagement() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20,  });\r\n    const addNewModalRef = useRef();\r\n    const ModelModalRef = useRef();\r\n    const [service, setService] = useState([]);\r\n    const columns = [\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'userName',\r\n            // width: 300,\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            // width: 150,\r\n        },\r\n        {\r\n            title: 'Service',\r\n            dataIndex: 'serviceDetail',\r\n            // width: 200,\r\n            render: (v) => v?.name\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'permanentAddress',\r\n            // width: 300,\r\n        },\r\n        {\r\n            title: 'WorkList',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id,userName:row.userName }) }} >Works</Button>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            title: 'Rate Per Hour',\r\n            dataIndex: 'per_hr_rate',\r\n            width: 110,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Worker?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            WorkerService.listWorker(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n    function listService() {\r\n        Service.listService()\r\n            .then(res => { setService(res.data || []); }).catch(err => { AntdMsg('Service data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        WorkerService.deleteWorker(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list,users:data }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listService();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Workers</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, service }} />\r\n            <ModelModal ref={ModelModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list ,users}) {\r\n\r\n    const [userNames, setUserNames] = useState([]);\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const Names = users?.map((item) => (\r\n            {\r\n                label: item.userName ? <><p style={{ padding: \"0px\", margin: \"0px\" }}>{item.userName}</p><p style={{ fontSize: \"12px\", margin: \"0px\" }}><Typography.Text type=\"danger\">@{item.phone}</Typography.Text></p></> : item.phone,\r\n                value: item.userName ? item.userName : item.phone,\r\n                searchKey: item.userName + item.phone\r\n            }\r\n        ))\r\n        setUserNames(Names)\r\n    }, [users])\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                    <Select\r\n                            showSearch\r\n                            allowClear\r\n                            placeholder=\"Select by username / phone\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={(e) => onChange(e,\"key\")}\r\n                            filterOption={(input, option) =>\r\n                                (option?.searchKey ?? '').toLowerCase().includes(input.toLowerCase())\r\n                            }\r\n                            options={userNames}\r\n                        />\r\n                        {/* <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear /> */}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, service } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        WorkerService.detailWorker(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        WorkerService.saveWorker(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ avatar: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Worker'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Username\" required>\r\n                                            <Input placeholder=\"John Doe\" value={data.userName} onChange={e => { handleChange({ userName: e.target.value }) }} />\r\n\r\n                                            {/* <Input placeholder=\"John Doe\" value={data.userName} onChange={e => { handleChange(e.target.value, 'userName') }} /> */}\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Service\" required>\r\n                                            <Select value={data.serviceId} onChange={v => { handleChange({ serviceId: v }) }}\r\n                                                options={\r\n                                                    service.map(v => (\r\n                                                        {\r\n                                                            value: v._id,\r\n                                                            label: v.name,\r\n                                                        }\r\n                                                    ))\r\n                                                } >\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Alternate Phone\" required>\r\n                                            <Input placeholder=\"Alternate Phone\" value={data.alternatePhone} onChange={e => { handleChange({ alternatePhone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Present Address\" required>\r\n                                    <Input.TextArea placeholder=\"Present Address\" value={data.presentAddress} onChange={e => { handleChange({ presentAddress: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Permanent Address\" required>\r\n                                    <Input.TextArea placeholder=\"Permanent Address\" value={data.permanentAddress} onChange={e => { handleChange({ permanentAddress: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Per Hour Rate\" required>\r\n                                <Input placeholder=\"Per Hour Rate\" value={data.per_hr_rate} onChange={e => { handleChange({ per_hr_rate: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal = forwardRef((props, ref) => {\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Works of <Typography.Text type=\"danger\">{data?.userName}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <WorkHistory {...{ workerId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/details-user/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list-user', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/save-user\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'userservice';\r\n\r\n    static detailJob(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static listJob(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveJob(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteJob(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, Descriptions , Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport jobService from '../../services/job';\r\nimport UserService from '../../services/user';\r\n\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport commonObj from '../../commonObj';\r\n\r\nconst viewAccess = true;\r\n\r\nexport default function JobList({userId=null}) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20,userId });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Receiver Name',\r\n            dataIndex: 'receiverName',\r\n            // width: 300,\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            // width: 300,\r\n        },\r\n        {\r\n            title: 'Service',\r\n            dataIndex: 'serviceDetail',\r\n            width: 200,\r\n            render: (v) => v?.name\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n            // width: 300,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            // width: 300,\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n            setLoading(true);\r\n            jobService.listJob(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function userlist() {\r\n            setLoading(true);\r\n            UserService.listUser(qData).then(res => {\r\n                setUser(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, isAll:1});\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, qData, setQData, list,userId,users: user }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    useEffect(() => {\r\n            userlist();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Jobs</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n                expandable={{\r\n                    expandedRowRender: (record) => (\r\n                        <Descriptions title=\"Job Info\">\r\n                        <Descriptions.Item label=\"WorkerName\">{record?.workerDetail ?  record?.workerDetail.userName : 'Not Accepted'}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Worker Phone\">{record?.workerDetail ? record?.workerDetail.phone : 'Empty'}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Live\">{record.addressDetail.state}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Remark\">empty</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Address\">\r\n                          {record.addressDetail.street1} ,{record.addressDetail.street2} ,{record.addressDetail.city}\r\n                        </Descriptions.Item>\r\n                      </Descriptions>\r\n                    ),\r\n                    rowExpandable: (record) => record.receiverName !== 'Not Expandable',\r\n                  }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({  addNewModalRef, selected, deleteData, qData, setQData,userId ,list,users }) {\r\n\r\n    const [userNames, setUserNames] = useState([]);\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const Names = users?.map((item) => (\r\n            {\r\n                label: item.userName ? <><p style={{ padding: \"0px\", margin: \"0px\" }}>{item.userName}</p><p style={{ fontSize: \"12px\", margin: \"0px\" }}><Typography.Text type=\"danger\">@{item.phone}</Typography.Text></p></> : item.phone,\r\n                value: item.userName ? item.userName : item.phone,\r\n                searchKey: item.userName + item.phone\r\n            }\r\n        ))\r\n        setUserNames(Names)\r\n    }, [users])\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {\r\n                    !userId && \r\n               <>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            showSearch\r\n                            allowClear\r\n                            placeholder=\"Select by username / phone\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={(e) =>onChange(e, \"key\")}\r\n                            filterOption={(input, option) =>\r\n                                (option?.searchKey ?? '').toLowerCase().includes(input.toLowerCase())\r\n                            }\r\n                            options={userNames}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker \r\n                            style={{width:'100%'}}\r\n                            value={qData.Datekey}\r\n                            onChange={v => (setQData({ ...qData, Datekey: v}))} allowClear\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                </>\r\n                 }\r\n                <Col span={5}>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, DatePicker, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport UserService from '../../../services/user';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport JobList from '../JobList';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function UserManagement() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const ModelModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'userName',\r\n\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'JobLists',\r\n            dataIndex: '_id',\r\n            width: 200,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id,userName:row.userName }) }} >Jobs</Button>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            UserService.listUser(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        UserService.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list,users: data }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <ModelModal ref={ModelModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list,users }) {\r\n\r\n    const [userNames, setUserNames] = useState([]);\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const Names = users?.map((item) => (\r\n            {\r\n                label: item.userName ? <><p style={{ padding: \"0px\", margin: \"0px\" }}>{item.userName}</p><p style={{ fontSize: \"12px\", margin: \"0px\" }}><Typography.Text type=\"danger\">@{item.phone}</Typography.Text></p></> : item.phone,\r\n                value: item.userName ? item.userName : item.phone,\r\n                searchKey: item.userName + item.phone\r\n            }\r\n        ))\r\n        setUserNames(Names)\r\n    }, [users])\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            showSearch\r\n                            allowClear\r\n                            placeholder=\"Select by username / phone\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={(e) => onChange(e,\"key\")}\r\n                            filterOption={(input, option) =>\r\n                                (option?.searchKey ?? '').toLowerCase().includes(input.toLowerCase())\r\n                            }\r\n                            options={userNames}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        UserService.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        UserService.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ avatar: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Username\" required>\r\n                                            <Input placeholder=\"John Doe\" value={data.userName} onChange={e => { handleChange({ userName: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Email\" required>\r\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal = forwardRef((props, ref) => {\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Job List of <Typography.Text type=\"danger\">{data?.userName}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <JobList {...{ userId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'leave';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static approve(id, data) {\r\n        return axios.post(this.baseURL + \"/approve/\" + id, data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag, Checkbox, Radio, Divider, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/leave';\r\nimport workerService from '../../services/worker';\r\nimport moment from \"moment\"\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport commonObj from '../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Leave() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [worker, setWorker] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Worker Name',\r\n            dataIndex: 'workerDetail',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Reason',\r\n            dataIndex: 'reason',\r\n            width: 250,\r\n        },\r\n        {\r\n            title: 'Start Date',\r\n            dataIndex: 'startDate',\r\n            width: 150,\r\n            render: (v) => {\r\n                return (<span>{new Date(v).toLocaleDateString()}</span>)\r\n            }\r\n        },\r\n        {\r\n            title: 'End Date',\r\n            dataIndex: 'endDate',\r\n            width: 150,\r\n            render: (v) => {\r\n                return (<span>{new Date(v).toLocaleDateString()}</span>)\r\n            }\r\n        },\r\n        {\r\n            title: 'Prescription',\r\n            dataIndex: 'precipition',\r\n            render: (v) => {\r\n                return <Image src={v?.url} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'isApproved',\r\n            width: 150,\r\n            render: (_, row) => {\r\n                if (row.status === \"Approved\") {\r\n                    return <Tag color='green'>Approved</Tag>\r\n                } else if (row.status === \"Rejected\") {\r\n                    return <Tag color='red'>Rejected</Tag>\r\n                }\r\n                else {\r\n                    return <Tag color='blue'>Requested</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            Services.list(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n    function workerlist() {\r\n        setLoading(true);\r\n        workerService.listWorker(qData).then(res => {\r\n            setWorker(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, isAll: 1 });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteService(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, workers: worker }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    useEffect(() => {\r\n        workerlist();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Leave Requests</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, workers }) {\r\n\r\n    const [userNames, setUserNames] = useState([]);\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const Names = workers?.map((item) => (\r\n            {\r\n                label: item.userName ? <><p style={{ padding: \"0px\", margin: \"0px\" }}>{item.userName}</p><p style={{ fontSize: \"12px\", margin: \"0px\" }}><Typography.Text type=\"danger\">@{item.phone}</Typography.Text></p></> : item.phone,\r\n                value: item.userName ? item.userName : item.phone,\r\n                searchKey: item.userName + item.phone\r\n            }\r\n        ))\r\n        setUserNames(Names)\r\n    }, [workers])\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            showSearch\r\n                            allowClear\r\n                            placeholder=\"Select by username / phone\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={(e) => onChange(e, \"userName\")}\r\n                            filterOption={(input, option) =>\r\n                                (option?.searchKey ?? '').toLowerCase().includes(input.toLowerCase())\r\n                            }\r\n                            options={userNames}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            placeholder=\"Select Type...\"\r\n                            style={{\r\n                                width: 180,\r\n                            }}\r\n                            onChange={(v) => onChange(v, 'status')}\r\n                            allowClear\r\n                            options={[\r\n                                {\r\n                                    value: \"Approved\",\r\n                                    label: 'Approved',\r\n                                },\r\n                                {\r\n                                    value: \"Rejected\",\r\n                                    label: 'Rejected',\r\n                                },\r\n                                {\r\n                                    value: \"Requested\",\r\n                                    label: 'Requested',\r\n                                },\r\n\r\n                            ]}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker\r\n                            style={{ width: '100%' }}\r\n                            onChange={v => onChange(v, 'DateKey')} allowClear\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        Services.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.file ? [res.data?.file] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.approve(data._id, data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Leave'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={6}>\r\n                                <Divider orientation=\"left\">Leave Application Status</Divider>\r\n                                <Radio.Group onChange={(e) => handleChange({ status: e.target.value })} value={data.status} style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\" }} >\r\n                                    <Radio value=\"Approved\">Approved</Radio>\r\n                                    <Radio value=\"Requested\">Requested</Radio>\r\n                                    <Radio value=\"Rejected\">Rejected</Radio>\r\n                                </Radio.Group>\r\n\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Leave Date</Divider>\r\n                                <DatePicker.RangePicker\r\n                                    style={{ width: '100%' }}\r\n                                    defaultValue={[moment(data.startDate), moment(data.endDate)]}\r\n                                    onChange={v => handleChange({ startDate: new Date(v[0]), endDate: new Date(v[1]) })} allowClear\r\n                                />\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import { DashboardOutlined, UserOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Setting from \"../pages/Setting\"\r\nimport Service from '../pages/Service';\r\nimport WorkerManagement from '../pages/management/workerManagement';\r\nimport UserManagement from '../pages/management/userManagement';\r\nimport JobList from '../pages/JobList';\r\nimport WorkHistory from '../pages/WorkHistory';\r\nimport Leave from '../pages/Leave';\r\n\r\n\r\nconst routes = [\r\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard },\r\n    { title: 'Service', icon: ApartmentOutlined, url: '/Service', component: Service },\r\n    { title: 'JobList', icon: ApartmentOutlined, url: '/JobList', component: JobList },\r\n    {\r\n        title: 'Management', icon: BankOutlined, url: '/management', children: [\r\n            { title: 'User', icon: ApartmentOutlined, url: '/', component: UserManagement },\r\n            { title: 'Worker', icon: ApartmentOutlined, url: '/Worker', component: WorkerManagement },\r\n        ]\r\n    },\r\n\r\n    { title: 'WorkHistory', icon: CalendarOutlined, url: '/workhistory', component: WorkHistory },\r\n    { title: 'Leave Requests', icon: CalendarOutlined, url: '/leave', component: Leave },\r\n    { title: 'Settings', icon: CalendarOutlined, url: '/Setting', component: Setting },\r\n\r\n].filter(v => (!v.hidden) || v.children?.length);\r\n\r\nexport default routes;\r\n\r\n","import { Menu } from 'antd';\r\nimport React from 'react';\r\nimport routes from './route';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst items = [...routes];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach((v, i) => {\r\n        if (v.children?.length) {\r\n            arr[i] = {\r\n                ...arr[i],\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            arr[i] = {\r\n                ...v,\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle(items);\r\n\r\nconst App = () => {\r\n    const paths = [];\r\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\r\n        paths.push(prev + '/' + cur);\r\n        return prev + '/' + cur;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <Menu\r\n                    defaultSelectedKeys={[paths.pop()]}\r\n                    defaultOpenKeys={[...paths]}\r\n                    mode=\"inline\"\r\n                    // theme=\"dark\"\r\n                    items={items}\r\n                    style={{ height: '100vh' }}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import { Breadcrumb } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport routes from \"./route\";\r\n\r\n\r\nconst newRoutes = [];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach(v => {\r\n        if (v.children) {\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        }\r\n        newRoutes.push({ title: v.title, url: prevBaseUrl + v.url })\r\n    })\r\n}\r\nconvertMultiToSingle([...routes]);\r\n\r\nexport default function MyBreadcrumb() {\r\n    const location = useLocation().pathname;\r\n    const [breads, setBreads] = useState([]);\r\n    useEffect(() => {\r\n        const paths = [];\r\n        location.split('/')?.reduce((prev, cur) => {\r\n            paths.push(prev + '/' + cur);\r\n            return prev + '/' + cur;\r\n        });\r\n        setBreads(newRoutes.filter(v => paths.includes(v.url)).reverse());\r\n    }, [location]);\r\n\r\n    return (\r\n        <Breadcrumb separator=\"\">\r\n            {\r\n                breads?.map((v, i) => {\r\n                    if (i === breads.length - 1) {\r\n                        return <Breadcrumb.Item key={v.url}>{v.title}</Breadcrumb.Item>\r\n                    } else {\r\n                        return <React.Fragment key={v.url}>\r\n                            <Breadcrumb.Item><Link to={v.url + '/'}>{v.title}</Link></Breadcrumb.Item>\r\n                            <Breadcrumb.Separator>/</Breadcrumb.Separator>\r\n                        </React.Fragment>\r\n                    }\r\n                })\r\n            }\r\n        </Breadcrumb>\r\n    )\r\n};\r\n","import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import { Avatar, Layout, Menu, Image } from \"antd\";\r\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport commonObj from \"../../commonObj\";\r\n\r\n\r\n\r\n\r\nexport default function Top() {\r\n\r\n    const items = [\r\n        {\r\n            label: commonObj?.name ? commonObj.name : 'You',\r\n            icon: <Avatar shape=\"circle\" size={32}\r\n                src={\r\n                    commonObj?.avatar?.url\r\n                        ?\r\n                        <Image\r\n                            src={commonObj?.avatar.url}\r\n                            style={{\r\n                                width: 32,\r\n                            }}\r\n                            preview={false}\r\n                        />\r\n                        : null\r\n                }\r\n                icon={!commonObj?.avatar?.url ? <UserOutlined /> : null}\r\n            />,\r\n            key: 'profile',\r\n        },\r\n        {\r\n            label: 'Logout',\r\n            icon: <LogoutOutlined />,\r\n            key: 'logout',\r\n            style: { color: 'red' },\r\n            onClick: () => { window.localStorage.clear(); window.location.reload(); }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Layout.Header style={{ padding: 0, height: 'auto' }} >\r\n                <Menu mode=\"horizontal\" items={items} style={{ lineHeight: '46px' }} />\r\n            </Layout.Header>\r\n        </>\r\n    );\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { Card, Layout } from \"antd\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\nimport routes from \"./route\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\nimport Top from \"./Top\";\r\n\r\n\r\nconst newRoutes = [];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach(v => {\r\n        if (v.children) {\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle([...routes]);\r\n\r\n\r\nexport default function MyLayout() {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Layout.Sider\r\n                    width={250}\r\n                    collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}\r\n                    style={{\r\n                        overflow: 'auto',\r\n                        height: '100vh',\r\n                        position: 'fixed',\r\n                        left: 0,\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        maxWidth: '300px!important',\r\n                        width: '300px!important'\r\n                    }}\r\n                >\r\n                    <div className=\"logo\" />\r\n                    <Menu />\r\n                </Layout.Sider>routes\r\n                <Layout className=\"site-layout\">\r\n                    <Top />\r\n\r\n                    <Layout.Content\r\n                        style={{\r\n                            margin: '24px 16px 0 240px',\r\n                            overflow: 'initial',\r\n                            marginLeft: !collapsed ? '230px' : '60px'\r\n                        }}\r\n                    >\r\n                        <Breadcrumb />\r\n                        <Card bordered>\r\n                            <Routes>\r\n                                {newRoutes.map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["style","textAlign","service","id","data","axios","this","baseURL","params","query","ids","url","config","UploadImage","fileList","setFileList","count","cropImage","disabled","listType","uploadImage","options","onSuccess","onError","file","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","total","append","fileService","then","res","uid","name","err","handleOnChange","fl","handleRemove","aspect","shape","quality","rotate","accept","customRequest","onChange","onRemove","className","length","MyPagination","props","qData","setQData","showTotal","start","page","limit","end","pageSize","current","pp","showSizeChanger","commonObj","includes","Search","addNewModalRef","selected","deleteData","list","onSubmitCapture","gutter","span","marginBottom","placeholder","value","key","e","target","allowClear","type","htmlType","float","icon","PlusOutlined","onClick","openForm","title","onConfirm","okText","cancelText","danger","DeleteOutlined","AddForm","forwardRef","ref","useState","open","setOpen","setData","ajxRequesting","setAjxRequesting","handleChange","Object","entries","forEach","ent","varDt","k","v","keys","split","i","parseInt","useImperativeHandle","dt","_id","fileType","save","Services","AntdMsg","message","catch","finally","useEffect","top","onOk","okButtonProps","onCancel","destroyOnClose","maskClosable","width","footer","spinning","indicator","LoadingOutlined","fontSize","spin","layout","label","required","per_hr_rate","WorkHistory","workerId","loading","setLoading","setSelected","useRef","WorkHistoryService","map","extra","tableColumns","dataIndex","render","receiverName","phone","amount","status","filter","item","hidden","ellipsis","fixed","tableProps","bordered","size","showHeader","rowSelection","selectedRowKeys","tableLayout","undefined","level","pagination","position","columns","dataSource","scroll","y","x","users","userNames","setUserNames","Names","userName","padding","margin","searchKey","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","WorkerService","avatar","serviceId","alternatePhone","presentAddress","permanentAddress","ModelModal","JobList","userId","user","setUser","jobService","UserService","isAll","expandable","expandedRowRender","record","workerDetail","addressDetail","state","street1","street2","city","rowExpandable","Datekey","email","workers","orientation","display","gap","alignItems","defaultValue","moment","startDate","endDate","Date","routes","DashboardOutlined","component","Dashboard","ApartmentOutlined","src","height","row","EditOutlined","BankOutlined","children","ModelModalRef","isActive","color","setService","Service","CalendarOutlined","worker","setWorker","toLocaleDateString","_","workerService","Setting","items","convertMultiToSingle","arr","prevBaseUrl","to","paths","useLocation","pathname","reduce","prev","cur","push","defaultSelectedKeys","pop","defaultOpenKeys","mode","newRoutes","MyBreadcrumb","location","breads","setBreads","reverse","separator","Error404","subTitle","Top","preview","UserOutlined","LogoutOutlined","window","localStorage","clear","reload","lineHeight","MyLayout","collapsed","setCollapsed","minHeight","collapsible","onCollapse","overflow","left","bottom","maxWidth","Menu","marginLeft","path","element"],"sourceRoot":""}